{"version":3,"file":"sdk.bundle.js","sources":["../src/send-mail.js","../index.js"],"sourcesContent":["///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n//import fetch from \"node-fetch\";  // Import 'fetch' for older Node.js versions\r\n// Check if we're in a Node.js environment\r\nconst isNode = typeof process !== 'undefined' && process.versions && process.versions.node;\r\n\r\nif (isNode && !globalThis.fetch) {\r\n    // Import 'node-fetch' only in Node.js\r\n    globalThis.fetch = require('node-fetch');\r\n}\r\n\r\nexport function sendEmail(from, to, emailCC, emailBCC, attachment, attachment_name, companyName, subject, body, apiKey) {\r\n    return new Promise((resolve, reject) => {\r\n        // Construct the API request data (as JSON)\r\n        const requestData = {\r\n            email_to: to,\r\n            email_from: from,\r\n            emailCC: emailCC,\r\n            emailBCC: emailBCC,\r\n            attachment: attachment,\r\n            attachment_name: attachment_name,\r\n            subject: subject,\r\n            body: body,\r\n            company_name: companyName,\r\n            api_key: apiKey\r\n        };\r\n\r\n        // Make the POST request to the PHP API with JSON body\r\n        fetch(\"https://www.amtech-co.com/mail_sender/v1/send-mail/send\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(requestData),  // Convert the request data to a JSON string\r\n        })\r\n            .then(response => response.json())  // Parse the JSON response\r\n            .then(data => {\r\n                if (data.success) {\r\n                    resolve(data);  // Return the response from the server if successful\r\n                } else {\r\n                    reject(`Error: ${resolve(data) || \"Unknown error\"}`);  // Handle error message from the API response\r\n                }\r\n            })\r\n            .catch(error => {\r\n                reject(`Error sending email: ${error}`);\r\n            });\r\n    });\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////","//////////////////////////////////////////////////////////////////////////////////////\r\n// COMPANY: Amtech technology (Amtech-co LLC | Software)\r\n// Copyright: Â©copyright Amtech-co LLC | Software\r\n// SDK: Amtech Mail Sender\r\n// DESCRIPTION: Send mails through this SDK using javascript\r\n// CONTACT INFORMATION:\r\n//          Whatsapp: +243 977 776 716\r\n//          Email: contact@amtech-co.com\r\n//          Website: https://amtech-co.com\r\n///////////////////////////////////////////////////////////////////////////////////////\r\n\r\n//const { sendEmail } = require('./src/send-mail.js');  // Import the sendEmail function\r\nimport { sendEmail } from './src/send-mail.js';\r\n\r\nconst apiKey = '__APIKEY__';  // Replace with your actual SendGrid API key.\r\n// Create an account at Amtech technology and receive your free APIkey\r\nconst from = 'exemple@domain.com';  // Sender's email\r\nconst to = 'exemple@domain.com';  // Recipient's email\r\nconst emailCC = ''; // required. set the company email adresse if don't what to put here!\r\nconst emailBCC = ''; // required. set the company email adresse if don't what to put here!\r\nconst attachment = ''; // the attachment is not supported yet. leave it blank until the update\r\nconst attachment_name = ''; // leave this blank as well\r\n\r\nconst subject = 'subject message';\r\nconst body = 'body message'; // you can include html format as well\r\nconst companyName = 'your company name';  // Company name\r\n\r\nsendEmail(from, to, emailCC, emailBCC, attachment, attachment_name, companyName, subject, body, apiKey)\r\n    .then(response => {\r\n        console.log('Response:', response);\r\n    })\r\n    .catch(error => {\r\n        console.error('Response:', error);\r\n    });\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////"],"names":["isNode","process","versions","node","globalThis","fetch","require","sendEmail","from","to","emailCC","emailBCC","attachment","attachment_name","companyName","subject","body","apiKey","Promise","resolve","reject","requestData","email_to","email_from","company_name","api_key","method","headers","JSON","stringify","then","response","json","data","success","concat","error","console","log"],"mappings":"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"}